{"version":3,"sources":["extensions/getComments/GetCommentsApplicationCustomizer.ts"],"names":[],"mappings":"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","file":"GetCommentsApplicationCustomizer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport { Log } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseApplicationCustomizer,\r\n  PlaceholderContent,\r\n  PlaceholderName \r\n} from '@microsoft/sp-application-base';\r\nimport { Dialog } from '@microsoft/sp-dialog';\r\n\r\nimport * as strings from 'GetCommentsApplicationCustomizerStrings';\r\n\r\nimport { SPHttpClient, ISPHttpClientOptions, SPHttpClientResponse } from '@microsoft/sp-http';\r\nimport pnp from \"sp-pnp-js\";\r\nimport { PermissionKind } from \"@pnp/sp\";\r\n\r\nconst LOG_SOURCE: string = 'GetCommentsApplicationCustomizer';\r\n\r\n/**\r\n * If your command set uses the ClientSideComponentProperties JSON input,\r\n * it will be deserialized into the BaseExtension.properties object.\r\n * You can define an interface to describe it.\r\n */\r\nexport interface IGetCommentsApplicationCustomizerProperties {\r\n  // This is an example; replace with your own property\r\n  testMessage: string;\r\n}\r\n\r\n/** A Custom Action which can be run during execution of a Client Side Application */\r\nexport default class GetCommentsApplicationCustomizer\r\n  extends BaseApplicationCustomizer<IGetCommentsApplicationCustomizerProperties> {\r\n\r\n  private _topPlaceholder: PlaceholderContent | undefined;\r\n  private _bottomPlaceholder: PlaceholderContent | undefined;\r\n\r\n  @override\r\n  public onInit(): Promise<void> {\r\n\r\n\r\n    pnp.setup({\r\n      spfxContext: this.context\r\n    });\r\n      \r\n    pnp.sp.web.currentUserHasPermissions(PermissionKind.ManageWeb).then(perms => {\r\n      if(perms){\r\n        this._renderPlaceHolders();\r\n      }      \r\n    });\r\n    //this.getSitePageComments();\r\n    //this.getPages();\r\n    \r\n\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private async getSitePageComments(id) {\r\n      const currentWebUrl: string = this.context.pageContext.web.serverRelativeUrl;\r\n\r\n      const response = await this.context.spHttpClient.get(`${currentWebUrl}/_api/web/lists/GetByTitle('Site Pages')/GetItemById(${id})/Comments?$expand=replies,likedBy,replies/likedBy&$top=10&$inlineCount=AllPages`, SPHttpClient.configurations.v1);\r\n\r\n      const responseJSON = await response.json();\r\n\r\n      let commentsNumber: number = 0;\r\n\r\n      for (let entry of responseJSON.value) {\r\n        commentsNumber ++;\r\n        commentsNumber = commentsNumber + entry.replyCount;      \r\n      } \r\n      this.UpdateItem(id, commentsNumber);\r\n      console.log('comments: ' +commentsNumber + 'page id: ' + id); \r\n  }\r\n\r\n\r\n  private async getPages(){\r\n    const currentWebUrl: string = this.context.pageContext.web.serverRelativeUrl;\r\n\r\n    const response = await this.context.spHttpClient.get(`${currentWebUrl}/_api/web/lists/GetByTitle('Site Pages')/items`, SPHttpClient.configurations.v1);\r\n\r\n    const responseJSON = await response.json();\r\n    let pageId;\r\n    for (let entry of responseJSON.value) {\r\n      pageId = entry.ID;\r\n      \r\n     \r\n      this.getSitePageComments(pageId);\r\n    }\r\n    alert('SharePoint is processing the page comments!')\r\n  }\r\n\r\n\r\n  private UpdateItem(id, comments)\r\n  {\r\n    pnp.sp.web.lists.getByTitle(\"Site Pages\").items.getById(id).update({\r\n      Previous_x0020_Comments : comments\r\n    }).then(console.log)\r\n    .catch(console.log);\r\n  }\r\n\r\n\r\n\r\n  private _renderPlaceHolders(): void {\r\n\r\n\r\n      // Handling the bottom placeholder\r\n      if (!this._bottomPlaceholder) {\r\n        this._bottomPlaceholder =\r\n          this.context.placeholderProvider.tryCreateContent(\r\n            PlaceholderName.Bottom,\r\n            { onDispose: this._onDispose });\r\n  \r\n        // The extension should not assume that the expected placeholder is available.\r\n        if (!this._bottomPlaceholder) {\r\n          console.error('The expected placeholder (Bottom) was not found.');\r\n          return;\r\n        }\r\n  \r\n        if (this.properties) {\r\n  \r\n          if (this._bottomPlaceholder.domElement) {\r\n            this._bottomPlaceholder.domElement.innerHTML = `\r\n              <div id=\"checkComments\" Title=\"Get Comments Notfications\" style=\"position: absolute; bottom: 0; width: 22px; height: 18px; left: 10px; z-index: 100; padding: 10px; cursor: pointer;\" class=\"ms-bgColor-themeDark ms-fontColor-white \">\r\n                <i class=\"ms-Icon ms-Icon--Message\" aria-hidden=\"true\" style=\"font-size: 20px;\"></i>\r\n              </div>`;\r\n          }\r\n        }\r\n      }\r\n      let ctx = this;\r\n      document.getElementById('checkComments').onclick = function(){ctx.getPages()};\r\n\r\n    }\r\n\r\n    private _onDispose(): void {\r\n      console.log('Disposed Coments.');\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"../../../../../src"}